{% extends 'ZenstruckFormBundle:Twitter:form_bootstrap3_layout.html.twig' %}

{% block form_row %}
    {% spaceless %}
        <div class="form-group row{% if errors|length > 0 %} has-error{% endif %}"
            {% set display_row = theme_options.display_row is defined ? theme_options.display_row : true %}
            {% if display_row == false %} style="display: none;" {% endif %}>
            {{ form_label(form, label|default(null)) }}
            {% set ctrl_width = theme_options.control_width is defined ? theme_options.control_width : 'col-md-10' %}
            <div class="{{ ctrl_width }}">
                {{ form_widget(form) }}
                {{ form_errors(form) }}
                {% if help is defined and help %}
                    <div class="help-block">{{ help }}</div>
                {% endif %}
            </div>
        </div>
    {% endspaceless %}
{% endblock form_row %}

{% block form_label %}
    {% spaceless %}
        {% set is_multichoice_widget = (checked is defined) and ('choice' in form.parent.vars.block_prefixes) %}

        {% if is_multichoice_widget %}
            {% set label_attr = label_attr|merge({'class': 'radio' in block_prefixes ? 'radio' : 'checkbox'}) %}
        {% else %}
            {% set lbl_width = theme_options.label_width is defined ? theme_options.label_width : 'col-md-2' %}
            {% set label_attr = label_attr|merge({'class': 'control-label ' ~ lbl_width}) %}
        {% endif %}
        {% if not compound %}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {% endif %}
        {% if required %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}
        {% if label is empty %}
            {% set label = id|trans({}, translation_domain) %}
        {% endif %}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
            {{ label|trans({}, translation_domain)|raw }}
            {% if is_multichoice_widget %}
                {{ form_widget(form) }}
            {% endif %}
        </label>
    {% endspaceless %}
{% endblock form_label %}

{% block checkbox_widget %}
    {% if 'choice' not in form.parent.vars.block_prefixes %}
        {% set attr = attr|merge({'class': (attr.class|default('') ~ ' control-standalone')|trim}) %}
    {% endif %}
    {{ parent() | replace({'form-control': ''}) | raw }}
{% endblock checkbox_widget %}

{% block scroll_widget %}
    {% spaceless %}
        <div {{ block('widget_container_attributes') }}>
            {{ value | raw }}
        </div>
    {% endspaceless %}
{% endblock %}

{% block content_widget %}
    <div {{ block('widget_container_attributes') }}>
        <div class="content-menu float-right-top">
            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-toggle="dropdown">
                <span>{{ app.request.locale | upper }}</span>&nbsp;<i class="fa fa-caret-down"></i>
            </button>
            <ul class="dropdown-menu pull-right" role="menu">
                {% for child in form %}
                    <li role="presentation" class="pointer-hand"><a role="menuitem">{{ child.vars.name | upper }}</a></li>
                {% endfor %}
            </ul>
        </div>
        {% for child in form %}
            <div data-lang="{{ child.vars.name | upper }}"
                 class="lang{% if app.request.locale != child.vars.name %} hide{% endif %}">
                {% if contentTitle %}
                    {{
                        form_widget(child['title'], {
                            'attr': {
                                'placeholder': titlePlaceHolder | trans({}, 'home') ~ '...'
                            }
                        })
                    }}
                {% endif %}
                {% if contentTitle and contentText%}<br>{% endif %}
                {% if contentText %}
                    {{
                        form_widget(child['content'], {
                            'attr': {
                                'placeholder': textPlaceHolder | trans({}, 'home') ~ '...'
                            }
                        })
                    }}
                {% endif %}
            </div>
        {% endfor %}
    </div>
{% endblock %}

{% block form_errors %}
    {% if errors|length > 0 %}
        {% set errorClass = form.parent is empty ? 'global-error' : 'field-error' %}
        {% spaceless %}
            <div class="help-block {{ errorClass }}">
                {% if errors|length == 1 %}
                    {{ errors[0].message }}
                {% else %}
                    <ul>
                        {% for error in errors %}
                            <li>{{ error.message }}</li>
                        {% endfor %}
                    </ul>
                {% endif %}
            </div>
        {% endspaceless %}
    {% endif %}
{% endblock form_errors %}
